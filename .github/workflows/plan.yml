name: terraform plan

run-name: ${{ github.ref_name }}-${{ github.run_number }}

on:
  pull_request:
    branches:
      - 'main'
    types: [ opened, synchronize, reopened ]
  push:
    branches:
      - 'main'
  workflow_dispatch:


jobs:
  terraform-plan:
    concurrency:
      group: terraform-plan-and-apply
    runs-on: 'ubuntu-latest'
    if: (github.event_name != 'workflow_dispatch'
      || (github.event_name == 'workflow_dispatch' && !startsWith(github.ref, 'refs/tags/')))
      && (github.ref != 'refs/heads/main' || (github.ref == 'refs/heads/main' && github.run_attempt == 1))
    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1.8.0
        with:
          app_id: 419492
          private_key: ${{ secrets.APP_PRIVATEKEY }}

      - name: Checkout sensu terraform
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.6
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Initialize Terraform Provider and Modules
        run: terraform init

      - name: Generate Terraform Plan
        run: terraform plan -out=terraform.tfplan

      - name: Get current date
        if: github.ref == 'refs/heads/main'
        id: get-date
        run: echo "::set-output name=date::$(date +'%Y%m%d')"

      - name: Create Asset
        if: github.ref == 'refs/heads/main'
        run: zip -r sensu-terraform-build.zip .

      - name: Create Draft Release
        if: github.ref == 'refs/heads/main'
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
        with:
          tag_name: v${{ steps.get-date.outputs.date }}.${{ github.run_number }}
          release_name: v${{ steps.get-date.outputs.date }}.${{ github.run_number }}
          draft: true
          prerelease: false

      - name: Upload assets to the release
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: sensu-terraform-build.zip
          asset_name: sensu-terraform-build.zip
          asset_content_type: application/zip

      - name: Delete older drafted releases
        uses: sgpublic/delete-release-action@v1.1
        if: github.ref == 'refs/heads/main'
        with:
          draft-drop: true
          draft-drop-count: 0
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}

      - name: Publish Release
        if: github.ref == 'refs/heads/main'
        run: echo "You can publish release from here - ${{ steps.create_release.outputs.html_url }}"